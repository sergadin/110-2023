#include <math.h>

/*Функции из R в R*/
typedef double (*FR_R)(double);

/* Ошибки кода */
typedef enum
{	
	WRONG_AB,	//Неправильный отрезок
	WRONG_f,	//Неправильная функция
	LIMIT_0,	//Условие коректные; Не нашлась точка, где функция обнуляется
	GOOD,		//Условие коректные; Нашлась точка, где функция обнуляется
} Error;

/*
* Параметры:
*	• f - функция R -> R для поиска нуля функции;
*	• a - начала отрезка для поиска нуля функции;
*	• b - конец отрезка для поиска нуля функции;
*	• eps - погрешность;
*	• *err - указатель на ошибку;
*	• *с - указатель на кол-во интераций, которое нам потребовалось для вычислений;
* -----------------------------------------------------------------------------------------
* На вход функция принимает монотоную гладкую функцию f, концы отрезка a, b, погрешность eps
* Функция ищет нули функии уравнения при помощи метода Ньютона. На выходе функция возрашает первый найденый нуль функции и кол-во интераций, которое нам потребовалось для вычислений.
*/

double newton_tangent_method(FR_R f, double a, double b, double eps, Error* err, int* c);