#include <math.h>

/*Функции из R в R*/
typedef double (*F_RR)(double);

/* Ошибки кода */
typedef enum
{
	GOOD, //Все хорошо. Код работает исправно
	BAD,  //Плохо. Код работает неисправно(
} Error; 

/* 
* Параметры:
*	• f - функция R -> R для последовательности;
*	• g - функция R -> Z для проверки (Для удобства вычислений функция будет R -> R);
*	• x - аргумент;
*	• eps - погрешность;
*	• *err - указатель на ошибку;
* -----------------------------------------------------------------------------------------
* Считается последовательность [f(x), f(f(x)), f(f(f(x))), f(...f(x)...), ...] вложений функции f в себя при аргументе x.
* Во время построения последовательности проверяются значения g от сосдених значений последовательности (находим значение композиция g от f(...f(x)...), f(f(...f(x)...))). 
* Если мы смогли найти такую пару, при котором функция g принимате значение 0, мы возрощаеем код ошибки GOOD. Иначе мы возрощаем код ошибки BAD.
*/
double sequence_recursive_takes(F_RR f, F_RR g, double x, double eps, Error *err);