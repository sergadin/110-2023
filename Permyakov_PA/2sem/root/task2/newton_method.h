#include <stdio.h>
#include <stdlib.h>
#include <math.h>

typedef double* polynomial;

typedef enum {		// Коды ошибок:
        OK,		// - все хорошо
        SEGMENT_ERROR,	// - неправильный отрезок - корень в конце отрезка или 
			//   критическая точка в отрезке
        DEGREE_ERROR,	// - неверная степень
	ITERATION_LIMIT_EXCEEDED		// - слишком долго считает
} error;

double find_root(polynomial f, int n, double a, double b, double eps,  error* err);

/* Входные данные: многочлен f в виде вектора(массива действительных чисел),
** его степень, отрезок [a, b](надо ввести число а, число b), на котором нужно найти корень, точность.
**
** Требования к отрезку: 
** 1) промежуток монотонности;
** 2) достаточно мал (длиной хотя бы меньше 1 - на это есть проверка) (см. теорема Канторовича);
** 3) при небольшой точности можно вводить отрезок, корень в котором находиться в критической точке
** (например, х^3 с отрезком [-0.3, 0.3]), однако при большей точности будет ошибка 
** (функция проверяет равна ли нулю производная во избежание деления на нуль);
** 4) Корень находиться строго внутри отрезка;
** Функция находит корень с данной точностью, если он есть (код ошибки ОК), возращает его, иначе - ошибка
** (значения в концах имеют один знак).
*/
