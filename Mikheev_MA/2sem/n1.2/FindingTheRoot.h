#include <stdio.h>
#include <math.h>


typedef double (*RFun)(double);


typedef enum{     // Ошибки
    OK,           // Все хорошо
    LIMIT,        // Превышено количество итераций
    HAVE_NO_ROOT, // Корень вне отрезка
    NOT_CORRECT   // Метод не применим для данной функции
}Er;


/* Функция вычисляет корень уравнения f(x) = 0 на отрезке [a, b] методом Ньютона
** 
** На входе подается функция f, ее производная g, левая граница отрезка, правая граница отрезка,
** заданная точность, адрес переменной, отвечающей за количество итераций, адрес ошибки. Функция
** методом Ньютона  приближает последовательность точек к корню уравнения, пока не будет достигнута
** нужная точность. В результате возвращает приближенное значение корня (т.е. последнюю точку из полученных).
** Если количество итераций достигло максимума, то статус ошибки - LIMIT, если значение интеграла 
** не определено или стремится к бесконечности статус ошибки - NOT_CORRECT, если корень находится
** вне отрезка [a, b], то статус ошибки - HAVE_NO_ROOT. Также функция меняет значениие переменной,
** отвечающей за количество итераций.
**
** P.S. Для корректности работы должна быть задана функция, имеющая только 1 корень на отрезке [a, b].
**
** P.P.S. Для корректности работы метода Ньютона должны задаваться функции, имеющие одинаковый знак
** первой и второй производных на отрезке. Например для f(x) = arctg(x) данный метод применим не будет.
*/
double FindingTheRoot(RFun f, RFun g, double a, double b, double EPS, int *count, Er *error);