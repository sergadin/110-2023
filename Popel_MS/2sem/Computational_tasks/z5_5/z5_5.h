#include <math.h>
#include <time.h>
#include <stdlib.h>
#include <stdio.h>

/* Множество функций из R в R*/
typedef double (*RRFun)(double);

/* Основные ошибки*/
typedef enum {
	NA_OK, /* нет ошибок */
    NA_WRNG_ORD, /* неправильный порядок ввода значений границ отрезка*/
    FILE_NOT_OPEN, /*ошибка открытия файла*/
    MEMORY_ERR, /* ошибка выделения памяти*/
}Error;


/* 	
 *	Параметры: f - действительнозначная функция 
 *		   а - левая граница отрезка
 *		   b - правая граница отрезка
 *		   len - длина массива / количество х-ов
 *		   eps - погрешность
 *		   err - код ошибки, по которому будет проводиться проверка
 *		   file_name - имя файла
 *  Функция ищет максимальное отклонение значений приближенной и исходной функции методом наименьших квадратов 
 *  на нескольких случайных разбиениях прямой. Строит массивы значений для вычисления аппроксимирующей функции
 *  Проводит проверку точности приближения на случайеых массивах, предварительно строя их, и выводит значение максимального отклонения.
 *  По случайным разбиениям строятся графики, на которых сравниваются исходные функции и полученные линейным приближением.
 *  Вывод:
 *  Если функция выполнена без ошибок, выводится код ошибки NA_OK и найденное отклонение.
 *  Если границы отрезка введены не в правильном порядке (левая граница болше правой) - выводится код ошибки NA_WRNG_ORD.
 *  Если возникла ошибка открытия файла, выводится код ошибки FILE_NOT_OPEN.
 *  Если для массивов не выделилась память, выводится код ошибки MEMORY_ERR.
 */

double Min_square(RRFun f, double a, double b, int len, double eps, Error *err, const char * file_name);

/*
 * Класс, ищущий линейную аппроксимацию функций
 * Приватные переменные a_ - коэффициент наклона, b_ - свободный член уравнения линейной функции.
 */
class Approximation{
    private:
        double a_, b_;
    public:
        /*	Параметры:
         *		   *xs - массив х-ов
         *		   *ys - массив значений данной функции
         *		   len - длина массивов
         *	Функция класса, в которой вычисляются коэффициенты прямой линейного приближения функции по заданным значениям и точкам
         */
        Approximation(double *xs, double *ys, int len); /*функция аппроксимации*/
        void reset(){a_ = b_ = 0.;}
        Approximation(){a_= 0., b_ = 0.;}
        double operator()(double x) const{ /*возвращает значение в точке х приближенной линейной функции*/
            return a_ * x + b_;
        }
        void get(){
        	printf("Значения a_ - %lf и b_ - %lf\n", a_, b_);
        }
        ~Approximation(){}

};
