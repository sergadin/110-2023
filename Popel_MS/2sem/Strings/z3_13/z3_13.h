#include <stdio.h>
#include <stdlib.h>
#include <string.h>

/* Основные ошибки*/
typedef enum {
	NA_OK, /*Нет ошибок*/
    FILE_WR, /*ошибка открытия файла*/
    NA_MEMORY_ERR, /*ошибка выделения памяти*/
}Error;


 /*	Параметры: *f - исходный файл.
 *         *fout - итоговый файл.
 *          line - количество строк в исходном файле.
 *         *err - указатель на код ошибки.
 * Функция обрабатывает текст полученного файла с кодом, сохраняя, в соответствии с выполнением условий, команды программы под инструкциями
 * #ifdef - #else - #endif. На вход подается рабочий код без синтаксических и логических ошибок (Если есть #ifdef или #else, то обязательно
 *                                                                                                                      прописан и #endif)
 * Вывод: 
 * Если код выполнен без ошибок, выводится код ошибки NA_OK и в консоль передаются данные о положении в файле искомых инструкций.
 * Последний исправленный файл записывается в файл newcode.c
 * Если возникают ошибки при открытии файла или при работе с ним, возвращается код ошибки FILE_WR и значение -1.
 * Если возникают ошибки при выделении памяти, возвращается код ошибки NA_MEMORY_ERR и значение -1.
 */

int Condit_compil(FILE *f, FILE *fout, int line, Error *err);
