#include <math.h>

/* Основные ошибки*/
typedef enum {
	NA_OK, /*Нет ошибок*/
    NA_ZERO_MATR, /*Введена матрица без элементов*/
    NA_MEMORY_ERR, /*Ошибка выделения памяти*/
    FILE_WR, /*Ошибка открытия или чтения файла*/
}Error;



 /*	Параметры: *file_name - указатель на название файла, из которого получаются элементы матрицы (в первой строке - порядок матрицы, далее
 *                                                                                                ее элементы - каждый в новой строке)
 *         eps - погрешность.
 *         *err - указатель на код ошибки.
 * Функция перезаписывает матрицу из файла в массив и ищет определитель переданной матрицы и возвращает полученное значение.
 * Вывод: Если функция выполнена без ошибок, возвращается код ошибки NA_OK и значение определителя матрицы.
 * Если возникла ошибка при открытии или чтении файла возвращается код ошибки FILE_WR и значение -1.
 */
double determinant(const char * file_name, double eps, Error *err);

/*	Параметры: *matr - указатель на массив, содержащий элементы матрицы
 *          n - порядок передаваемой матрицы
 *          eps - погрешность.
 *         *err - указатель на код ошибки.
 * Функция ищет определитель переданной матрицы, рекурсивно сводя ее к поиску определителя матрицы 2х2. Она раскладывает определитель по 
 * первой строке и рекурсивно подсчитывает значение миноров меньшей степени.
 * Вывод: Если функция выполнена без ошибок, возвращается код ошибки NA_OK и значение определителя матрицы.
 * Если возникла ошибка выделения памяти, возвращается код ошибки NA_MEMORY_ERR и значение -1.
 * Если передана пустая матрица (в которой нет ни одного значения), возвращается код ошибки NA_ZERO_MATR и значение -1.
 */
double determinate(double *matr, int n, double eps, Error *err);
