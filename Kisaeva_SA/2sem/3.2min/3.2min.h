#include <math.h>

typedef double (*func)(double); // функции из R в R

typedef enum { // ошибки
	OK, // код заканчивает работу без ошибок
	DATA_ERR, // ошибка данных
	MORE_THAN_LIMIT, // превышение предела итераций
} error;


/*
* Функция определяет приближённое значение минимума функции на данном отрезке [a,b] с 
* заданной точностью eps, используя метод золотого сечения
*
* Параметры:
*              f - функция
*              а - вещественное число, левая граница отрезка.
*              b - вещественное число, правая граница отрезка.
*              eps - погрешность
*              *err - указатель на код ошибки
*
* Сначала идёт проверка границ отрезка. Далее:
* Заданный отрезок делится двума симметричными относительно его центра точками 
* и рассчитываются значения функции в них.
* Тот из концов отрезка, к которому среди двух вновь поставленных точек ближе оказалась та,
* значение в которой максимально, отбрасывают
* На следующей итерации в силу золотого сечения уже надо искать всего одну новую точку
* Процедура продолжается до тех пор, пока не будет достигнута заданная точность
*
* Вывод:
* Код выполнен без ошибок: возвращается код ошибки OK и приближённо посчитанное минимальное значение функции
* (с учетом погрешности)
* Превышен предел количества итераций: возвращается код ошибки MORE_THAN_LIMIT
* Левый конец отрезка больше правого: возвращается код ошибки DATA_ERR
*/

double find_minimum_golden_ratio(func f, double a, double b, double eps, error *err);