#include <math.h>

typedef double (*func)(double); // функции из R в R

typedef enum { // ошибки
	OK, // код заканчивает работу без ошибок
	DATA_ERR, // ошибка данных
	NO_ROOT, // нет корней на отрезке
	MORE_THAN_LIMIT
} error;

double chord_method(func f, double a, double b, double eps, error *err, int *kol_iters);



/*
 * Функция реализует метод хорд для поиска корней функции.
 * На вход НЕ подаются функции с несколькими корнями на указанном отрезке и не строгомонотонные.
 * На вход подаются параметры:
 *              f - функция
 *              а - вещественное число, левая граница отрезка.
 *              b - вещественное число, правая граница отрезка.
 *              eps - погрешность
 *              *err - указатель на код ошибки
 *				*kol_iters - указатель на количество итераций
 * Если значения разных знаков, значения в этих точках соединяются хордой и вычисляется точка, в которой она пересекает ось Х.
 * Подсчитывается значение в найденной точке, в нее сдвигается конец хорды того же знака. Пока концы хорды остаются разных знаков 
 * или не совпадают, эти операции продолжают выполняться. Когда модуль разности текущего корня и предыдущего корня становится меньше погрешности,
 * функция завершает работу, передает код ошибки OK и точку, в которой значение близко к нулю.
 *
 * Вывод:Если код выполнен без ошибок и не преодлел лимит количества итераций, возвращается код ошибки OK и точку со значением 0
 * (с учетом погрешности) и выводится количество итераций
 *при неуспешном окончании пишется, что тест не пройден
 *
 */
