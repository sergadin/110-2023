#include <stdio.h>
#include <math.h>
#include <stdlib.h>

typedef double (*func)(double); // функции из R в R

typedef struct {
	double x, y;
} point;

typedef enum {
	OK,                 // код выполнен без ошибок, посчитаны базовые точки
	OUTOFRANGE,         // точки интерполяции вне отрезка
	ERR_INTER_POINTS,   // точки интерполяции совпали
} error;

void interpolation(point* xy_points, int kol_p, point* int_points, int kol_i_p, double* inter_y, error* err);


/* 
* Функция, вычисляющая приблизительные значения интерполяционных точек по уже имеющимся точкам методом кусочно-квадратичной интерполяции
* 
* входные данные: 
*       xy_points - массив известных точек,
*       kol_pт - количество этих точек, 
*       int_points - массив с точками, в которых нужно найти значение, 
*       kol_i_p - количество этих точек, 
*       inter_y - массив, куда будут записываться искомые значения 
*       *err - указатель на код ошибки.
* если нужно отсортировать точки по возрастанию для удобного построения графика, то они сортируются
* Определяется отрезок, в который ходит интерполяционная точка
* Находятся три ближайшие точки к искомой и с помощью формул весовых коэффицентов и формулы
* интерполяции находится приближенное значение точки.
*
* В массив inter_y запишутся посчитанные значения функции в интерполяционных точках
* 
*/