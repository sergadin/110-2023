#include<math.h>


typedef double(*f)(double);

typedef enum {
        infinity, //привышен лимит обращения к функции 
        OK //без ошибок
}Error;

/* Подсчет значений композиции функции.
 *
 *      Параметры: f -  действительнозначная функция
 *                 х - аргумент
 *                 eps - погрешность
 *                 *error - указатель на код ошибки
 *      Подсчитывается значение функций f в точке х.
 *      Если значение композиции с учетом погрешности не удовлетворяет условию, пересчитывается новое значение для очередной композиции функций f.
 *      (f(x))->(f(f(x)))
 *      Если мы не получим х за  определенное число операций(1000), выдастся ошибка infinity.
 *      Если функция успешно завершается, в код ошибки записывается OK.
*      Вывод:
 *      Как только нашелся у = (f...f(f(x))...) , возвращается код ошибки OK и значение у.
 *      Если такой у не нашелся, а цикл закончил свою работу, возвращается код ошибки infinyty, а значение у приравнивается к 0. и не выводится на экран.
 */

double composing_function(f *funcs, double eps, double x, Error *error);
                                                              27,1        Внизу


