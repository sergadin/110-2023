#include <stdio.h>
#include <stdlib.h>
#include <math.h>

//варианты ошибок
typedef enum {
	OK, 		//Ошибок нет
	EMPTY,      //Исходная сетка состоит из 0 элементов 
    NO_ANSWER,  //Новая сетка состоит из 0 элементов
    BORDERS,    //В новой сетке есть точки, выходящие за пределы исходной сетки
} Error;


double* hermite_interpolation(double* domain, int n, double* f_values, double* df_values, double* new_domain, int N, Error *error);

/*
Функция возвращает приближенные значения функции в заданных точках, используя эрмитову интерполяцию

Переменные:
	domain - массив точек, на которых заданы значения функции и производной. Массив должен быть отсортирован по возрастанию значений x
	n - количество точек в domain
	f_values - массив значений функции на точках
	df_values - массив значений производной функции на точках
	new_domain - массив точек, на которых нужно узнать значения функции
	N - количество точек в new_domain
	error - код ошибки

Принцип работы:
	Функция проходит циклом по массиву новых точек, для каждой находя отрезок из исходных точек, на котором расчитываются коэффиценты кубического 
	многочлена эрмита, далее вычисляется приближенное значение в новой точке, путем подставления в многочлен разницы между новой точкой и  начала 
	найденного отрезка.
*/